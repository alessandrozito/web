fitBCI$coefficients
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e7, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
fitBCI <- glm(cbind(1e7, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitPois$coefficients
fitBCI$coefficients
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
cbind(fitBCI$coefficients, fitPois$coefficients)
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(), offset = log(n),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(), offset = -log(n),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(), offset = 1/log(n),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(), offset = 1/log(rep(1e8, 1000)),
data = dataBCI, method = "glm.fit.antoniak")
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
#------------------------------------------------------- Simulated data
# Run the experiment to replicate data
simulate_data <- function(N, p, lambda){
X <- cbind(1, matrix(rnorm(N * (p - 1), sd = 10), nrow = N, ncol = p - 1))
beta <- c(0, rnorm(p-1, sd = 0.1))
alphas <- exp(X %*% beta)
n <- rpois(N, lambda = lambda)
y <- rDP(alpha = alphas, size = n)
return(list(n = n, y = y, beta = beta, X = X, df = data.frame(n = n, y = y, X)))
}
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 2e3)
df
hist(df$y)
data$beta
data$n
head(data$df)
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 2e3)
df <- data$df[1:1000, ][, -3]
fit <- glm(cbind(n, y) ~ . ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y ~ . , family = "poisson",
data = df[, -1])
summary(fitPois)
fit <- glm(cbind(1e7, y) ~ . ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y ~ . , family = "poisson",
data = df[, -1])
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(round(fit$coefficients, 5), round(fitPois$coefficients, 5))
# Check the convergence to the Poisson regression
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 2e3)
df <- data$df[1:1000, ][, -3]
fit <- glm(cbind(1e7, y) ~ . ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y ~ . , family = "poisson",
data = df[, -1])
summary(fitPois)
summary(fit)
fit <- glm(cbind(1e7, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y ~ . , family = "poisson",
data = df[, -1])
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(round(fit$coefficients, 5), round(fitPois$coefficients, 5))
abline(a = 0, b = 1)
fitPois <- glm(y ~ . , family = "poisson", offset = log(n)
data = df[, -1])
summary(fitPois)
fitPois <- glm(y ~ . , family = "poisson", offset = log(n)
data = df)
summary(fitPois)
fitPois <- glm(y ~ . , family = "poisson", offset = log(n),
data = df)
summary(fitPois)
fitPois <- glm(y ~ . -n , family = "poisson", offset = log(n),
data = df)
summary(fitPois)
fitPois <- glm(y ~ . -n , family = "poisson", offset = 1/log(n),
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(round(fit$coefficients, 5), round(fitPois$coefficients, 5))
abline(a = 0, b = 1)
fitPois <- glm(y ~ . -n , family = "poisson", offset = 1/log(n),
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(round(fit$coefficients, 5), round(fitPois$coefficients, 5))
abline(a = 0, b = 1)
fitPois <- glm(y ~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(round(fit$coefficients, 5), round(fitPois$coefficients, 5))
abline(a = 0, b = 1)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients, 5)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
fit <- glm(cbind(1e6, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
fit <- glm(cbind(1e5, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y ~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
fit <- glm(cbind(1e3, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
fit <- glm(cbind(1e2, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
fit <- glm(cbind(1e7, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y ~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
# Try BCI
fitBCI <- glm(cbind(n, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
fitPois <- glm(y ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI[, -2], )
summary(fitPois)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
4.44235676/1.61451491
log(1e7)
1/log(1e7)
1.61451491/4.44235676
1/log(1e8)
fitBCI <- glm(cbind(1e5, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
max(dataBCI$y)
fitBCI <- glm(cbind(200, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1000, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(2000, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(rpois(lambda = 1e8, nrow(dataBCI)), y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
4.44235676/1.61451168
digamma(1)
-digamma(1)
1/-digamma(1)
fitPois <- glm(y + 1~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI[, -2], )
summary(fitPois)
fitPois <- glm(y + 1~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 2e3)
df <- data$df[1:1000, ][, -3]
fit <- glm(cbind(1e7, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y + 1~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
fitPois$coefficients
fitPois$coefficients[1] / (-digamma(1) + log(1e7))
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 2e3)
df <- data$df[1:1000, ][, -3]
fit <- glm(cbind(1e7, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson",
data = df)
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
fitPois <- glm(y  ~ . -n , family = "poisson",
data = df)
summary(fitPois)
fitPois <- glm(y-1~ . -n , family = "poisson",
data = df)
summary(fitPois)
fitPois$coefficients
fitPois <- glm(y~ . -n , family = "poisson",
data = df)
fitPois$coefficients
fitPois <- glm(y - 1~ . -n , family = "poisson",
data = df)
fitPois$coefficients
log(log(n_i))
log(log(1e7))
fit <- glm(cbind(1e7, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e7))
library(tidyverse)
library(tidyverse)
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e7))
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
#------------------------------------------------------- Simulated data
# Run the experiment to replicate data
simulate_data <- function(N, p, lambda){
X <- cbind(1, matrix(rnorm(N * (p - 1), sd = 10), nrow = N, ncol = p - 1))
beta <- c(2, rnorm(p-1, sd = 0.1))
alphas <- exp(X %*% beta)
n <- rpois(N, lambda = lambda)
y <- rDP(alpha = alphas, size = n)
return(list(n = n, y = y, beta = beta, X = X, df = data.frame(n = n, y = y, X)))
}
# Try the function
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 1000)
# Check the convergence to the Poisson regression
set.seed(10)
data <- simulate_data(N = 1200, p = 10, lambda = 2e3)
df <- data$df[1:1000, ][, -3]
fit <- glm(cbind(1e7, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e7))
summary(fitPois)
fit <- glm(cbind(1e8, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e8))
summary(fitPois)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = -log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e8))
summary(fitPois)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e8))
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
log(1e10)
log(-digamma(1) + log(1e10))
fit <- glm(cbind(1e10, y) ~ . -n ,
family = antoniak,
data = df,      # <------ estimate using the first 1000
method = "glm.fit.antoniak")   #
summary(fit)
fitPois <- glm(y - 1 ~ . -n , family = "poisson", offset = log(-digamma(1) + log(n)),
data = df %>% mutate(n = 1e10))
summary(fitPois)
round(fitPois$coefficients, 5)
round(fit$coefficients, 5)
plot(fit$coefficients, fitPois$coefficients)
abline(a = 0, b = 1)
# Try BCI
fitBCI <- glm(cbind(n, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
# Try BCI
fitBCI <- glm(cbind(n, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI[, -2], )
summary(fitPois)
cbind(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(rpois(lambda = 1e8, nrow(dataBCI)), y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
dataBCI[, -2]
dataBCI
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI,
offset = log(-digamma(1) + log(n)))
summary(fitPois)
fitBCI <- glm(cbind(n, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
cbind(fitBCI$coefficients, fitPois$coefficients)
fitBCI <- glm(cbind(1e8, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI,
offset = log(-digamma(1) + log(n)))
summary(fitPois)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e8),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
cbind(fitBCI$coefficients, fitPois$coefficients)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e10, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e10),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
c(beta_NR <- fisher_NR(X = X, y = y, n = n, maxiter = 25, tol = 1e-10)$beta)
y
c(beta_NR <- fisher_NR(X = X, y = y, n = rep(1e10, length(y)), maxiter = 25, tol = 1e-10)$beta)
fitBCI <- glm(cbind(1e10, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
c(beta_NR <- fisher_NR(X = X, y = y, n = rep(1e10, length(y)), maxiter = 25, tol = 1e-10)$beta)
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e10),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e12, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
c(beta_NR <- fisher_NR(X = X, y = y, n = rep(1e12, length(y)), maxiter = 25, tol = 1e-10)$beta)
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e12),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
log(-digamma(1) + log(n))
log(-digamma(1) + log(1e12))
log(-digamma(1) + log(1e13))
fitBCI <- glm(cbind(1e13, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
c(beta_NR <- fisher_NR(X = X, y = y, n = rep(1e13, length(y)), maxiter = 25, tol = 1e-10)$beta)
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e13),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
cbind(fitBCI$coefficients, fitPois$coefficients)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e13),
offset = log(digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
fitBCI <- glm(cbind(1e13, y) ~ EnvHet + Habitat + Stream, family = antoniak(),
data = dataBCI, method = "glm.fit.antoniak")
c(beta_NR <- fisher_NR(X = X, y = y, n = rep(1e13, length(y)), maxiter = 25, tol = 1e-10)$beta)
summary(fitBCI)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "poisson", data = dataBCI %>% mutate(n = 1e13),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
plot(fitBCI$coefficients, fitPois$coefficients)
abline(a=0, b = 1)
(-2)**2
(-2)**.5
(-2)**1/3
(-2)**1/4
(-2)**1/10
(-2)**(1/10)
(-2)**(1/4)
(-2)**(1/6)
(-2)**(1/7)
(-2)**(1/8)
(-2)**(1/3)
log(0.1)
sqrt(0.1)
digamma(2 * c(1:1000)) - digamma(c(1:1000))
plot(digamma(2 * c(1:1000)) - digamma(c(1:1000)), type = "line")
plot(digamma(2 * c(1:1000)) - digamma(c(1:1000)), type = "l")
plot(digamma(2 * c(1:1000)) - digamma(c(1:1000)), type = "l")
plot(c(1:1000) * (digamma(2 * c(1:1000)) - digamma(c(1:1000))), type = "l")
x <- c(1:1e5)
plot(x * (digamma(2 * x) - digamma(x)), type = "l")
quasipoisson
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = "quasipoisson", data = dataBCI %>% mutate(n = 1e13),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = quasipoisson(), data = dataBCI %>% mutate(n = 1e13),
offset = log(-digamma(1) + log(n)))
library(tidyverse)
fitPois <- glm(y - 1 ~ EnvHet + Habitat + Stream , family = quasipoisson(), data = dataBCI %>% mutate(n = 1e13),
offset = log(-digamma(1) + log(n)))
summary(fitPois)
quasipoisson
NA_real_
make.link
?nloptr
library(nloptr)
?nlopt
??nlopt
?nloptr
